import java.io.FileFilter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.BufferedReader;
import java.io.FileReader;
public static String getName(){
  try {  
   FileReader fr = new FileReader("/proc/cpuinfo");  
   BufferedReader br = new BufferedReader(fr);  
   String text = br.readLine();  
   String[] array = text.split(":\\s+", 2);  
   for (int i = 0; i < array.length; i++) {  
  }  
    return array[1];  
  } catch (FileNotFoundException e) {  
    return e.getMessage();
  } catch (IOException e) {  
    return e.getMessage();
  }  
  return "Unknown";  
}  

public static String getMaxFreq() {  
        String result = "";  
        ProcessBuilder cmd;  
        try {  
            String[] args = { "/system/bin/cat",  
                    "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq" };  
            cmd = new ProcessBuilder(args);  
            Process process = cmd.start();  
            InputStream in = process.getInputStream();  
            byte[] re = new byte[24];  
            while (in.read(re) != -1) {  
                result = result + new String(re);  
            }  
            in.close();  
        } catch (IOException ex) {  
            result = "N/A";  
        }  
        return result.trim();
}

public static String getMinFreq() {  
        String result = "";  
        ProcessBuilder cmd;  
        try {  
            String[] args = { "/system/bin/cat",  
                    "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_min_freq" };  
            cmd = new ProcessBuilder(args);  
            Process process = cmd.start();  
            InputStream in = process.getInputStream();  
            byte[] re = new byte[24];  
            while (in.read(re) != -1) {  
                result = result + new String(re);  
            }  
            in.close();  
        } catch (IOException ex) {  
            result = "N/A";  
        }  
        return result.trim();  
    } 

public static String getCurFreq() {  
        String result = "N/A";  
            FileReader fr = new FileReader(  
                    "/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq");  
            BufferedReader br = new BufferedReader(fr);  
            String text = br.readLine();  
            result = text.trim();  
        return result;  
    } 
  
  
public static String getTempera(){
  String temp = "Unknown";
        BufferedReader br = null;
        FileReader fr = null;
        try {
            File dir = new File("/sys/class/thermal/");
            File[] files = dir.listFiles(new FileFilter() {
                public boolean accept(File file) {
                    if (Pattern.matches("thermal_zone[0-9]+", file.getName())) {
                        return true;
                    }
                    return false;
                }
            });

            final int SIZE = files.length;
            String line = "";
            String type = "";
            for (int i = 0; i < SIZE; i++) {
                fr = new FileReader("/sys/class/thermal/thermal_zone" + i + "/type");
                br = new BufferedReader(fr);
                line = br.readLine();
                if (line != null) {
                    type = line;
                }

                fr = new FileReader("/sys/class/thermal/thermal_zone" + i + "/temp");
                br = new BufferedReader(fr);
                line = br.readLine();
                if (line != null) {
                    if (type.contains("cpu")) {
                        long temperature = Long.parseLong(line);
                        if (temperature < 0) {
                            temp = "Unknown";
                        } else {
                            temp = (float) (temperature / 1000.0) + "";
                        }
                    } else if (type.contains("tsens_tz_sensor")) {
                        long temperature = Long.parseLong(line);
                        if (temperature < 0) {
                            temp = "Unknown";
                        } else if (temperature > 100){
                            temp = (float) (temperature / 10.0) + "";
                        } else {
                            temp = temperature + "";
                        }
                    }

                }
            }

            if (fr != null) {
                fr.close();
            }
            if (br != null) {
                br.close();
            }
        } catch (Exception e) {
            
        } finally {
            if (fr != null) {
                try {
                    fr.close();
                } catch (Exception e) {
                    
                }
            }
            if (br != null) {
                try {
                    br.close();
                } catch (Exception e) {
                    
                }
            }
        }
        return temp;
}
